name: Auto PR E2E CI

permissions: write-all

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
  workflow_dispatch:
    inputs:
      ref:
        description: 'sha, tag, branch'
        required: true
        default: main
      e2e_labels:
        description: 'e2e labels(if not set, ginkgo will run all test, multi labels separated by commas)'
        required: false
        type: string
      ipfamily:
        description: 'IP family for the e2e test'
        required: true
        type: choice
        default: 'dual'
        options:
          - ipv4
          - ipv6
          - dual
          - all

jobs:
  get_ref:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.result.outputs.ref }}
      e2e_labels: ${{ steps.get_ref.outputs.e2e_labels }}
      unitest_enabled: ${{ steps.get_ref.outputs.unitest_enabled }}
      e2e_enabled: ${{ steps.get_ref.outputs.e2e_enabled }}
      ipfamily_ipv4only_e2e: ${{ steps.get_ref.outputs.ipfamily_ipv4only_e2e }}
      ipfamily_ipv6only_e2e: ${{ steps.get_ref.outputs.ipfamily_ipv6only_e2e }}
      ipfamily_dual_e2e: ${{ steps.get_ref.outputs.ipfamily_dual_e2e }}
    steps:
      - name: Check Code Changes
        uses: dorny/paths-filter@v2.11.1
        if: ${{ github.event_name == 'pull_request_target' }}
        id: filter_pr
        with:
          base: ${{ github.event.pull_request.base.sha }}
          ref: ${{ github.event.pull_request.head.sha }}
          filters: |
            run_e2e:
              - '**/*.sh'
              - '**/*.go'
              - 'go.mod'
              - 'go.sum'
              - 'charts/**'
              - 'Makefile*'
              - '**/Makefile*'
              - '**/Dockerfile'
            all_e2e:
              - 'test/**'
              - 'vendor/github.com/spidernet-io/**/*.go'

      - name: Get Ref
        id: get_ref
        run: |
          if ${{ github.event_name == 'workflow_dispatch' }} ; then
            echo "call by self workflow_dispatch"
            echo ::set-output name=tag::${{ github.event.inputs.ref }}
            echo ::set-output name=e2e_labels::${{ github.event.inputs.e2e_labels }}
            echo ::set-output name=e2e_enabled::true
            echo ::set-output name=unitest_enabled::true
            if ${{ github.event.inputs.ipfamily == 'ipv4' }}; then
              echo ::set-output name=ipfamily_ipv4only_e2e::true
              echo ::set-output name=ipfamily_ipv6only_e2e::false
              echo ::set-output name=ipfamily_dual_e2e::false
            elif ${{ github.event.inputs.ipfamily == 'ipv6' }}; then
              echo ::set-output name=ipfamily_ipv4only_e2e::false
              echo ::set-output name=ipfamily_ipv6only_e2e::true
              echo ::set-output name=ipfamily_dual_e2e::false
            elif ${{ github.event.inputs.ipfamily == 'dual' }}; then
              echo ::set-output name=ipfamily_ipv4only_e2e::false
              echo ::set-output name=ipfamily_ipv6only_e2e::false
              echo ::set-output name=ipfamily_dual_e2e::true
            elif ${{ github.event.inputs.ipfamily == 'all' }}; then
              echo ::set-output name=ipfamily_ipv4only_e2e::true
              echo ::set-output name=ipfamily_ipv6only_e2e::true
              echo ::set-output name=ipfamily_dual_e2e::true
            else
              echo "error, unknown input ipfamily: ${{ github.event.inputs.ipfamily }} "
              exit 1
            fi
          elif ${{ github.event_name == 'push' }} ; then
            echo "trigger by push"
            echo ::set-output name=tag::${{ github.sha }}
            echo ::set-output name=push::false
            echo ::set-output name=e2e_labels::smoke
            echo ::set-output name=e2e_enabled::true
            # do it in another workflow
            echo ::set-output name=unitest_enabled::false
            echo ::set-output name=ipfamily_ipv4only_e2e::false
            echo ::set-output name=ipfamily_ipv6only_e2e::false
            echo ::set-output name=ipfamily_dual_e2e::true
          elif ${{ github.event_name == 'pull_request_target' }} ; then
            echo "trigger by pull_request_target"
            echo ::set-output name=tag::${{ github.event.pull_request.head.sha }}
            echo ::set-output name=push::false
            if ${{ steps.filter_pr.outputs.all_e2e == 'true' }} ; then
                # run all e2e
                echo ::set-output name=e2e_labels::
                echo ::set-output name=ipfamily_ipv4only_e2e::true
                echo ::set-output name=ipfamily_ipv6only_e2e::true
                echo ::set-output name=ipfamily_dual_e2e::true
            else
                echo ::set-output name=e2e_labels::smoke
                echo ::set-output name=ipfamily_ipv4only_e2e::false
                echo ::set-output name=ipfamily_ipv6only_e2e::false
                echo ::set-output name=ipfamily_dual_e2e::true
            fi
            echo ::set-output name=e2e_enabled::${{ steps.filter_pr.outputs.run_e2e }}
            # do it in another workflow
            echo ::set-output name=unitest_enabled::false
          else
            # schedule event
            # use main sha for ci image tag
            echo "trigger by schedule"
            echo ::set-output name=tag::main
            echo ::set-output name=push::false
            # nightly ci, run all e2e
            echo ::set-output name=e2e_labels::
            echo ::set-output name=e2e_enabled::true
            echo ::set-output name=unitest_enabled::true
            echo ::set-output name=ipfamily_ipv4only_e2e::true
            echo ::set-output name=ipfamily_ipv6only_e2e::true
            echo ::set-output name=ipfamily_dual_e2e::true
          fi

      # some event, the tag is not sha, so checkout it and get sha
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          ref: ${{ steps.get_ref.outputs.tag }}

      - name: Result Ref
        id: result
        run: |
          ref=$( git show -s --format='format:%H')
          echo ::set-output name=ref::${ref}

  call_unitest:
    needs: get_ref
    if: ${{ needs.get_ref.outputs.unitest_enabled == 'true' }}
    # forbid to specify version for local workflow, GITHUB_REF Same as the caller workflow
    uses: ./.github/workflows/lint-golang.yaml
    with:
      ref: ${{ needs.get_ref.outputs.ref }}
    secrets: inherit

  call_build_ci_image:
    needs: [get_ref]
    if: ${{ needs.get_ref.outputs.e2e_enabled == 'true' }}
    # get  image:${{ needs.get_ref.outputs.ref }} and image-ci:${{ needs.get_ref.outputs.ref }}
    uses: ./.github/workflows/build-image-ci.yaml
    with:
      ref: ${{ needs.get_ref.outputs.ref }}
      push: false
    secrets: inherit

  lint_chart_against_release_image:
    needs: get_ref
    if: ${{ needs.get_ref.outputs.e2e_enabled == 'true' }}
    # forbid to specify version for local workflow, GITHUB_REF Same as the caller workflow
    uses: ./.github/workflows/call-lint-chart.yaml
    with:
      ref: ${{ needs.get_ref.outputs.ref }}
    secrets: inherit

  call_release_chart:
    needs: [get_ref]
    if: ${{ needs.get_ref.outputs.e2e_enabled == 'true' }}
    uses: ./.github/workflows/call-release-chart.yaml
    with:
      ref: ${{ needs.get_ref.outputs.ref }}
      submit: false
    secrets: inherit
  
  trivy_scan_images:
    runs-on: ubuntu-latest
    needs: [call_build_ci_image, get_ref,call_release_chart]
    if: ${{ needs.get_ref.outputs.e2e_enabled == 'true' }}
    steps:
      - name: Install Tools
        run: |
          # install kind/p2ctl/helm/ginkgo
          bash ./test/scripts/install-tools.sh
          
      - name: Download spiderpool-agent image
        uses: actions/download-artifact@v3
        with:
          name: image-tar-spiderpool-agent
          path: test/.download

      - name: Download spiderpool-controller image
        uses: actions/download-artifact@v3
        with:
          name: image-tar-spiderpool-controller
          path: test/.download

      - name: Load And Scan Images
        run: |
          TAR_FILES=` ls test/.download `
          echo $TAR_FILES
          for ITEM in $TAR_FILES ; do
              IMAGE_NAME=${ITEM%*.tar}
              cat test/.download/${ITEM} |  docker import - ${IMAGE_NAME}:${{ needs.call_build_ci_image.outputs.imageTag }}
              echo "---------trivy checkout image ${IMAGE_NAME}:${{ needs.call_build_ci_image.outputs.imageTag }} --------------------"
              make lint_image_trivy -e IMAGE_NAME=${IMAGE_NAME}:${{ needs.call_build_ci_image.outputs.imageTag }}  \
                  || { echo "RUN_IMAGE_TRIVY_FAIL=true" >> $GITHUB_ENV ; echo "error, image ${IMAGE_NAME}:${{ needs.call_build_ci_image.outputs.imageTag }} is bad" ; }
          done

      - name: Show Trivy Scan Report
        run: |
          if [ "${{ env.RUN_IMAGE_TRIVY_FAIL }}" == "true" ] ; then
              echo "error, image is not secure, see detail on Step 'Load And Scan Images' "
              exit 1
          else
              exit 0
          fi

  call_e2e_dual:
    needs: [call_build_ci_image, get_ref, call_release_chart]
    if: ${{ needs.get_ref.outputs.e2e_enabled == 'true' && needs.get_ref.outputs.ipfamily_dual_e2e == 'true' }}
    uses: ./.github/workflows/e2e-init.yaml
    with:
      ip_family: dual
      image_tag: ${{ needs.call_build_ci_image.outputs.imageTag }}
      push: false
      ref: ${{ needs.get_ref.outputs.ref }}
      charts: ${{ needs.call_release_chart.outputs.artifact }}
    secrets: inherit

  call_e2e_ipv4:
    needs: [call_build_ci_image, get_ref, call_release_chart]
    if: ${{ needs.get_ref.outputs.e2e_enabled == 'true' && needs.get_ref.outputs.ipfamily_ipv4only_e2e == 'true' }}
    uses: ./.github/workflows/e2e-init.yaml
    with:
      ip_family: ipv4
      image_tag: ${{ needs.call_build_ci_image.outputs.imageTag }}
      push: false
      ref: ${{ needs.get_ref.outputs.ref }}
      charts: ${{ needs.call_release_chart.outputs.artifact }}
    secrets: inherit

  call_e2e_ipv6:
    needs: [call_build_ci_image, get_ref, call_release_chart]
    if: ${{ needs.get_ref.outputs.e2e_enabled == 'true' && needs.get_ref.outputs.ipfamily_ipv6only_e2e == 'true' }}
    uses: ./.github/workflows/e2e-init.yaml
    with:
      ip_family: ipv6
      image_tag: ${{ needs.call_build_ci_image.outputs.imageTag }}
      push: false
      ref: ${{ needs.get_ref.outputs.ref }}
      charts: ${{ needs.call_release_chart.outputs.artifact }}
    secrets: inherit
